Player(Init){
  * (Init):
  | Key(z) ? Move(N) :(Step1)
  | Key(s) ? Move(S) :(Step1)
  | Key(q) ? Move(O) :(Step1)
  | Key(d) ? Move(E) :(Step1)
  | True ? Wait :(Step1)
  
  * (Step1): 
  | Key(FU) ? Hit(N) :(Init)
  | Key(FD) ? Hit(S) :(Init)
  | Key(FL) ? Hit(O) :(Init)
  | Key(FR) ? Hit(E) :(Init)
  | Key(p) ? Pop() :(Init)
  | Key(w) ? Wizz() :(Init)
  | True ? Wait :(Init)
}

SoulsHell(Init){
	* (Init):
	| Closest(@,N) & Closest(@,E) ? Move(N) :(PlayerE)
	| Closest(@,N) & Closest(@,O) ? Move(N) :(PlayerO)
	| Closest(@,N) ? Move(N) :(Init)
	| Closest(@,S) & Closest(@,E) ? Move(S) :(PlayerE)
	| Closest(@,S) & Closest(@,O) ? Move(S) :(PlayerO)
	| Closest(@,S) ? Move(S) :(Init)
	| Closest(@,E) ? Move(E) :(Init)
	| Closest(@,O) ? Move(O) :(Init)
	|Key(v) ? Wizz() : (Init)
	* (PlayerE):
	|Closest(@,E) ? Move(E) :(Init)
	|True ? Wait :(Init)
	* (PlayerO):
	|Closest(@,O) ? Move(O) :(Init)
	|True ? Wait :(Init)

	
}


SoulsHeaven(Init){
	* (Init): True ? Move(E) :(Step1)
	* (Step1): True ? Move(E) :(Step2)
	* (Step2): True ? Move(E) :(Step3)
	* (Step3): True ? Move(O) :(Step4)
	* (Step4): True ? Move(O) :(Step5)
	* (Step5): True ? Move(O) :(Init)
}

Obstacle(Init){
	* (Init):
	| Key(m) ? Pop() : (Init)
	| Key(n) ? Wizz() : (Init)
}

Cat(Init){
*(Init):

}

Flaque(Init){
*(Init):
	|Cell(N,@) ? Pop() : (Init)
}

Nest(Init){
	* (Init): True ? Egg() :(Init)
}

MissileHell(Init){
	* (Init): True ? Move(F) : (Init)
}

MissileHeaven(Init){
	* (Init): True ? Move(F) : (Step1)
	* (Step1): True ? Move(F) : (Step2)
	* (Step2): True ? Move(F) : (Step3)
	* (Step3): True ? Move(F) : (Step4)
	* (Step4): True ? Move(F) : (Step5)
	* (Step5): True ? Move(F) : (Step6)
	* (Step6): True ? Pop(F) : (Init)
}